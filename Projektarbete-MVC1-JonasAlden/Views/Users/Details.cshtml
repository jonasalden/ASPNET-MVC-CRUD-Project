@using System.Diagnostics.Eventing.Reader
@using Microsoft.AspNet.Identity
@using Projektarbete_MVC1_JonasAlden.Data.Models
@model Projektarbete_MVC1_JonasAlden.ViewModels.Users.UserDetailsViewModel

<div class="row">
    <div class="col-md-12">
        @if (Model.Id == User.Identity.GetUserId())
        { <h2>My details</h2>  }
        else
        { <h2>User Details</h2> }
    </div>
    <div class="row">
        <div class="col-md-12">
            @if (TempData["Message"] != null)
            {
                <div class="alert @TempData["Type"]" role="alert">@TempData["Message"]</div>
            }
        </div>
        <div class="row">
            <div class="col-md-12">
                @using (Html.BeginForm("Details", "Users", FormMethod.Post))
                {
                    <form role="form">
                        @Html.HiddenFor(model => @model.Id)
                        <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                            @Html.LabelFor(model => model.FirstName, "Firstname")
                            @Html.EditorFor(model => @model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Firstname" } })
                        </div>
                        <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                            @Html.LabelFor(model => model.SurName, "Surname")
                            @Html.EditorFor(model => @model.SurName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Surname" } })
                        </div>
                        <div class="clearfix"></div>
                        <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                            @Html.LabelFor(model => model.Email, "Email")
                            @Html.EditorFor(model => @model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                        </div>
                        <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                            @Html.LabelFor(model => model.EmployDate, "Employment date")
                            @if (User.IsInRole("Admin"))
                            {
                                @Html.EditorFor(model => model.EmployDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "yyy-MM-dd 00:00:00" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => @model.EmployDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.HiddenFor(model => @model.EmployDate, new { htmlAttributes = new { @class = "form-control" } })
                            }
                        </div>
                        <div class="clearfix"></div>
                        <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                            @Html.LabelFor(model => model.PhoneNumber, "Phone")
                            @Html.EditorFor(model => @model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone" } })
                        </div>
                        <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                            @Html.LabelFor(model => model.Address, "Address")
                            @Html.EditorFor(model => @model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                        </div>
                        <div class="clearfix"></div>
                        <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                            @Html.LabelFor(model => model.Experience, "Experience")
                            @if (User.IsInRole("Admin"))
                            {
                                @Html.EditorFor(model => @model.Experience, new { htmlAttributes = new { @class = "form-control", @placeholder = "Experience" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => @model.Experience, new { htmlAttributes = new { @class = "form-control", @placeholder = "Experience", @disabled = "disabled" } })
                                @Html.HiddenFor(model => @model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                            }
                        </div>
                        <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                            @Html.LabelFor(model => model.Domain, "Domain")
                            @if (User.IsInRole("Admin"))
                            {
                                @Html.EditorFor(model => @model.Domain, new { htmlAttributes = new { @class = "form-control", @placeholder = "Domain", } })
                            }
                            else
                            {
                                @Html.EditorFor(model => @model.Domain, new { htmlAttributes = new { @class = "form-control", @placeholder = "Domain", @disabled = "disabled" } })
                                @Html.HiddenFor(model => @model.Domain, new { htmlAttributes = new { @class = "form-control" } })
                            }
                        </div>
                        <div class="clearfix"></div>
                        @if (User.IsInRole("Admin"))
                        {
                            <div class="col-md-12">

                                <p style="font-weight: bold;">Roles</p>
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.Admin)
                                    @Html.LabelFor(m => m.Admin, "Admin")
                                </div>
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.Projectleader)
                                    @Html.LabelFor(m => m.Projectleader, "Projectleader")
                                </div>
                            </div>
                        }
                        @if (User.IsInRole("Admin") || @Model.Id == User.Identity.GetUserId())
                        {
                            <div class="col-md-1">
                                <input type="submit" value="Save" class="btn btn-default">
                            </div>
                            <div class="col-md-1">
                                <input type="button" class="btn btn-default" value="Reset password" onclick="location.href = '@Url.Action("ChangePassword", "Users")'" />
                            </div>
                        }
                    </form>
                }
            </div>
        </div>
    </div>
</div>
@if (User.IsInRole("Admin") && @Model.Projects.Count > 0 || @Model.Projects.Count > 0 && @Model.Id == User.Identity.GetUserId())  {
    <div class="row">
        <div class="col-md-12 table-responsive">
            <h3>Projects</h3>
            <table class="table">
                <thead>
                <tr>
                    <th>Title</th>
                    <th>Projectleader</th>
                    <th>Platform</th>
                    <th>Employees</th>
                    <th>Release Date</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in @Model.Projects)
                {
                    <tr>
                        <td>@item.Title</td>
                        <td>@item.ProjectLeader</td>
                        <td>@item.Platform</td>
                        <td>@item.Employees</td>
                        <td>@item.ReleaseDate</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}